
-------------

DONE
mail from Sawada-san concerning operator precedence:

(1) standard form: ex.  op foo : S1 .. Sk -> S                                  
      precedence = 0                                                            
(2) unary operator: ex.  op unary_ : S1 -> S                                    
      precedence = 15                                                           
(3) mix-fix with first & last tokens are both arguments: ex. op _ arg-or-op _ : 
S1 .. Sn -> S                                                                   
      precedence = 41
(4) otherwise (constant operator, operators of the form like "begin__end")
      precedence = 0

---------------

comments from Sawada-san 2013-10-30

(DONE)
(1) on-the-fly declarations (on p.21)
     The description of on-the-fly constant "`a:Nat" declaration

     "On-the-fly declaration of constants are done the same way, where
the <name> is a con-
      stant name as in \a:Natâ€˜. Using this construct is equivalent to
defining an operator
      op <name> : -> <sort> "

      is not incorrect, but I feel it is better to stress the fact
that the declaration is effective
      only within the current context (axioms or a term).

(2)  obsolete commands/switches
      There seems to be some commands which don't work properly and are now
      almost obsolete. One of them is the command 'save-system' which
tries to dump the
      executable image of the interpreter for later use. But I feel
nobody use this command any more.
      And there would be other commands/switches which don't have
significant value no more.
      I would like to list these things up and discuss the treatment
of them with you.

(3) putting some useful tips into the manual
     I think veteran users have many useful tips for avoiding troubles
with the system or
     for enhancing productivity of their work. These are valuable
information for novice users.
     Including tips might not fit the aim of the reference manual, though.

-----------------


