-- 以下のcafeobj codeに関してです．

open NAT .
ops n1 n2 : -> Nat .
trans n1 => n1 .
trans n1 => n2 .
eof
-- (1)
red n1 =(*,1)=>* NNN:Nat .
-- (2)
red n1 =(*,1)=>+ NNN:Nat .
close
eof

-- (1) 対する出力は

-- reduce in %NAT : (n1 = ( * , 1 ) =>* NNN):Bool

** Found [state 0] (n1):Nat
--   { NNN:Nat |-> n1 }

** Found [state 1] (n2):Nat
--    { NNN:Nat |-> n2 }

** No more possible transitions.
-- (true):Bool

-- です．

-- (2)に対しては，

-- reduce in %NAT : (n1 = ( * , 1 ) =>+ NNN):Bool

** Found [state 1] (n2):Nat
--   { NNN:Nat |-> n2 }

** No more possible transitions.
-- (true):Bool

-- です．

-- "trans n1 => n1 ."があるのだから(2)に対しても，

** Found [state 0] (n1):Nat
--   { NNN:Nat |-> n1 }

-- が出力されても良いと言う考え方もあると思います．
